'use client';
import { useState } from 'react';

interface Headline {
  id: number;
  text: string;
}

export default function PropertyForm() {
  const [propertyDetails, setPropertyDetails] = useState('');
  const [propertyLocation, setPropertyLocation] = useState('');
  const [selectedTone, setSelectedTone] = useState('‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå');
  const [headlines, setHeadlines] = useState<Headline[]>([]);
  const [isLoading, setIsLoading] = useState(false);

  const toneOptions = [
    '‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå',
    '‡∏õ‡∏±‡∏ç‡∏´‡∏≤',
    '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ß',
    '‡πÄ‡∏£‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à',
    '‡∏ä‡∏ß‡∏ô‡∏™‡∏á‡∏™‡∏±‡∏¢'
  ];

  const generateHeadlines = () => {
    setIsLoading(true);
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á)
    setTimeout(() => {
      const demoHeadlines = [
        { id: 1, text: 'üè† ‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏ß‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∞ ‡πÉ‡∏Å‡∏•‡πâ MRT ‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 9 ‡πÄ‡∏û‡∏µ‡∏¢‡∏á 5.9 ‡∏•‡πâ‡∏≤‡∏ô ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ô‡πà‡∏≤ÔøΩÔøΩÔøΩ‡∏á‡∏ó‡∏∏‡∏ô!' },
        { id: 2, text: '‚≠ê ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≠‡∏á‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏•‡πâ‡∏ß! ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß 2 ‡∏ä‡∏±‡πâ‡∏ô ‡∏ó‡∏≥‡πÄ‡∏•‡∏ó‡∏≠‡∏á ‡πÉ‡∏Å‡∏•‡πâ Central Rama 9' },
        { id: 3, text: 'üíé Luxury Home ‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 9 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∞‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 5.9 ‡∏•‡πâ‡∏≤‡∏ô' },
        { id: 4, text: 'üåü ‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏•‡∏≤‡∏î! ‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏π‡∏¢‡πà‡∏≤‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ' },
        { id: 5, text: '‚ú® ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 9! ‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å' }
      ];
      setHeadlines(demoHeadlines);
      setIsLoading(false);
    }, 1500);
  };

  return (
    <div className="w-full space-y-6">
      <div className="space-y-2">
        <label className="block text-sm font-medium text-gray-700">
          1. ‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏Ø
        </label>
        <textarea
          value={propertyDetails}
          onChange={(e) => setPropertyDetails(e.target.value)}
          placeholder="Preview: ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß 2 ‡∏ä‡∏±‡πâ‡∏ô 3 ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô 2 ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≠‡∏¢ 150 ‡∏ï‡∏£.‡∏°. ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∞‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö ‡∏£‡∏≤‡∏Ñ‡∏≤ 5.9 ‡∏•‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏ó"
          className="w-full p-3 border rounded-lg min-h-[100px] focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-black placeholder-gray-400"
        />
      </div>

      <div className="space-y-2">
        <label className="block text-sm font-medium text-gray-700">
          2. ‡∏Å‡∏£‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå
        </label>
        <textarea
          value={propertyLocation}
          onChange={(e) => setPropertyLocation(e.target.value)}
          placeholder="Preview: ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 9 ‡πÉ‡∏Å‡∏•‡πâ MRT ‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 9 ‡πÄ‡∏û‡∏µ‡∏¢‡∏á 300 ‡πÄ‡∏°‡∏ï‡∏£ ‡πÉ‡∏Å‡∏•‡πâ Central Rama 9, Fortune Town, The Nine"
          className="w-full p-3 border rounded-lg min-h-[100px] focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-black placeholder-gray-400"
        />
      </div>

      <div className="space-y-2">
        <label className="block text-sm font-medium text-gray-700">
          3. ‡πÇ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ
        </label>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2">
          {toneOptions.map((tone) => (
            <button
              key={tone}
              onClick={() => setSelectedTone(tone)}
              className={`p-2 rounded-lg transition-colors ${
                selectedTone === tone
                  ? 'bg-blue-500 text-white'
                  : 'bg-gray-100 hover:bg-gray-200'
              }`}
            >
              {tone}
            </button>
          ))}
        </div>
      </div>

      <button
        onClick={generateHeadlines}
        disabled={isLoading}
        className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 rounded-lg font-medium hover:opacity-90 transition-opacity disabled:opacity-50"
      >
        {isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏û‡∏≤‡∏î‡∏´‡∏±‡∏ß...' : '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏û‡∏≤‡∏î‡∏´‡∏±‡∏ß'}
      </button>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
      {headlines.length > 0 && (
        <div className="space-y-4 bg-gray-50 p-6 rounded-lg">
          <h2 className="text-xl font-semibold text-gray-800">‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ñ‡∏≥‡∏û‡∏≤‡∏î‡∏´‡∏±‡∏ß</h2>
          <div className="space-y-3">
            {headlines.map((headline) => (
              <div
                key={headline.id}
                className="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow cursor-pointer group"
              >
                <p className="text-gray-800">{headline.text}</p>
                <button 
                  className="mt-2 text-sm text-blue-500 opacity-0 group-hover:opacity-100 transition-opacity"
                  onClick={() => navigator.clipboard.writeText(headline.text)}
                >
                  ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
                </button>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
} 